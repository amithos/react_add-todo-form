{"version":3,"sources":["components/User/User.jsx","types.js","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/AddTodoForm/AddTodoForm.jsx","api/users.js","App.js","api/todos.js","index.js"],"names":["User","name","className","allTypes","addressType","PropTypes","shape","street","string","isRequired","suite","city","zipcode","geo","objectOf","userType","id","number","username","email","address","todoType","userId","title","completed","bool","user","AddTodoFormType","users","onAddToTheList","func","onSaveInState","onResetForm","newTodoTitle","newUserId","hasTodoTitleError","hasUserIdError","Todo","classNames","doneBlock","done","TodoList","todos","map","todo","key","AddTodoForm","this","props","onSubmit","event","preventDefault","wrongField","type","placeholder","value","onChange","target","React","Component","lat","lng","phone","website","company","catchPhrase","bs","getUserById","find","preparedTodos","App","state","addTodo","setState","length","changeState","resetForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53355488.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nexport const User = ({ name }) => (\n  <span className=\"user\">\n    {name}\n  </span>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nconst allTypes = {\n\n  addressType: PropTypes.shape({\n    street: PropTypes.string.isRequired,\n    suite: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    zipcode: PropTypes.string.isRequired,\n    geo: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  }),\n\n};\n\nallTypes.userType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: allTypes.addressType.isRequired,\n});\n\nallTypes.todoType = PropTypes.shape({\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: allTypes.userType.isRequired,\n});\n\nallTypes.AddTodoFormType = {\n  users: allTypes.userType.isRequired,\n\n  onAddToTheList: PropTypes.func.isRequired,\n  onSaveInState: PropTypes.func.isRequired,\n  onResetForm: PropTypes.func.isRequired,\n\n  newTodoTitle: PropTypes.string.isRequired,\n  newUserId: PropTypes.number.isRequired,\n  hasTodoTitleError: PropTypes.bool.isRequired,\n  hasUserIdError: PropTypes.bool.isRequired,\n};\n\nexport default allTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { User } from '../User';\nimport allTypes from '../../types';\nimport './Todo.css';\n\nexport const Todo = ({ completed, title, user }) => (\n  <div className={classNames(\n    'todo-block', {\n      doneBlock: completed,\n    },\n  )}\n  >\n    <span className={classNames('emptyCheckbox', { done: completed })}>\n      {completed ? '☑' : '☐'}\n    </span>\n\n    <span>{title}</span>\n\n    <User {...user} />\n  </div>\n);\n\nTodo.propTypes = {\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  user: allTypes.userType.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\nimport allTypes from '../../types';\n\nimport './TodoList.css';\n\nexport const TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <Todo {...todo} />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = PropTypes.arrayOf(allTypes.todoType).isRequired;\n","import React from 'react';\nimport './AddTodoForm.css';\nimport classNames from 'classnames';\nimport allTypes from '../../types';\n\nexport class AddTodoForm extends React.Component {\n  render() {\n    const {\n      users,\n      onAddToTheList,\n      onSaveInState,\n      onResetForm,\n\n      newTodoTitle,\n      newUserId,\n      hasTodoTitleError,\n      hasUserIdError,\n    } = this.props;\n\n    return (\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          onSaveInState('hasTodoTitleError', !newTodoTitle);\n          onSaveInState('hasUserIdError', !newUserId);\n\n          if (!newTodoTitle) {\n            return;\n          }\n\n          if (!newUserId) {\n            return;\n          }\n\n          onAddToTheList(newTodoTitle, newUserId);\n\n          onResetForm();\n        }}\n      >\n        <div className=\"fieldWrapper\">\n          <input\n            className={classNames('input', {\n              wrongField: hasTodoTitleError,\n            })}\n            type=\"text\"\n            placeholder=\"Enter some task, please\"\n            value={newTodoTitle}\n            onChange={(event) => {\n              onSaveInState('newTodoTitle', event.target.value);\n              onSaveInState('hasTodoTitleError', false);\n            }}\n          />\n\n          {hasTodoTitleError\n            && (\n            <span\n              className=\"fieldAlert\"\n            >\n              Oh no! You forgot to enter some task!\n            </span>\n            )\n          }\n        </div>\n\n        <div className=\"fieldWrapper\">\n          <select\n            className={classNames('sel', {\n              wrongField: hasUserIdError,\n            })}\n            value={newUserId}\n            onChange={(event) => {\n              onSaveInState('newUserId', event.target.value);\n              onSaveInState('hasUserIdError', false);\n            }}\n          >\n\n            <option value={0}>Choose a user</option>\n\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError\n            && (\n            <span\n              className=\"fieldAlert\"\n            >\n              Who are you?\n            </span>\n            )\n          }\n\n        </div>\n\n        <div className=\"buttonWrap\">\n          <button\n            type=\"submit\"\n            className=\"button\"\n          >\n            ADD\n          </button>\n        </div>\n\n      </form>\n    );\n  }\n}\n\nAddTodoForm.propTypes = allTypes.AddTodoFormType;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport { TodoList } from './components/TodoList';\nimport { AddTodoForm } from './components/AddTodoForm';\nimport todos from './api/todos';\nimport users from './api/users';\n\nconst getUserById = id => users.find(user => user.id === +id);\n\nconst preparedTodos = todos.map(todo => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\nclass App extends React.Component {\n  state = {\n    todos: preparedTodos,\n    newTodoTitle: '',\n    newUserId: 0,\n    hasTodoTitleError: false,\n    hasUserIdError: false,\n  }\n\n  addTodo = (title, userId) => {\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n\n        {\n          title,\n          userId,\n          completed: false,\n          id: state.todos.length + 1,\n          user: getUserById(userId),\n        },\n      ],\n    }));\n  }\n\n  changeState = (key, value) => {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  resetForm = () => {\n    this.setState({\n      newTodoTitle: '',\n      newUserId: 0,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"greating\">\n          <h1>Add todo form</h1>\n        </div>\n\n        <div className=\"statistics\">\n          <p>\n            <span>Users: </span>\n            {users.length}\n          </p>\n        </div>\n\n        <section className=\"form-wrapper\">\n          <AddTodoForm\n            users={users}\n            onAddToTheList={this.addTodo}\n            onSaveInState={this.changeState}\n            onResetForm={this.resetForm}\n\n            newTodoTitle={this.state.newTodoTitle}\n            newUserId={this.state.newUserId}\n            hasTodoTitleError={this.state.hasTodoTitleError}\n            hasUserIdError={this.state.hasUserIdError}\n          />\n        </section>\n\n        <section className=\"list-wrapper\">\n          <TodoList todos={this.state.todos} />\n        </section>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}